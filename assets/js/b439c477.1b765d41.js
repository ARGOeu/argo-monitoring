"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9806],{3160:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var s=t(4848),o=t(8453);const i={sidebar_position:8,title:"Process events/alerts directly from the source(AMS)"},a=void 0,r={id:"guides/AMS-consume-publish-events",title:"Process events/alerts directly from the source(AMS)",description:"All the events that compromise the produced alerts of the monitored",source:"@site/docs/guides/AMS-consume-publish-events.md",sourceDirName:"guides",slug:"/guides/AMS-consume-publish-events",permalink:"/argo-monitoring/docs/guides/AMS-consume-publish-events",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,title:"Process events/alerts directly from the source(AMS)"},sidebar:"tutorialSidebar",previous:{title:"Get Monitoring Status Data based on the Resource-ID",permalink:"/argo-monitoring/docs/guides/EOSC-getStatusData"},next:{title:"Introduction",permalink:"/argo-monitoring/docs/intro"}},c={},l=[{value:"Initialising a connection",id:"initialising-a-connection",level:3},{value:"Consume Events from a Subscription",id:"consume-events-from-a-subscription",level:3},{value:"Publishing Events to a Topic",id:"publishing-events-to-a-topic",level:3}];function u(e){const n={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["All the events that compromise the produced alerts of the monitored\nservices travel through ",(0,s.jsx)(n.a,{href:"https://argoeu.github.io/guides/messaging/",children:"The Argo Messaging Service."}),"\nThrough its supplementary tool, the ",(0,s.jsx)(n.a,{href:"https://argoeu.github.io/ams-library/",children:"argo-ams-library"}),"\na client can access the source directly and inspect the events, process them and even create its own\ndownward syncs.Although its recommended to use the library to interact with the\nmessaging service, you can also use plain HTTP requests."]}),"\n",(0,s.jsx)(n.h3,{id:"initialising-a-connection",children:"Initialising a connection"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'    # set up the ams client\n    ams_host = "{0}:{1}".format("example.com", str(443))\n    ams = ArgoMessagingService(endpoint=ams_host, project="test", token="secr3t")\n'})}),"\n",(0,s.jsx)(n.h3,{id:"consume-events-from-a-subscription",children:"Consume Events from a Subscription"}),"\n",(0,s.jsx)(n.p,{children:"Topics are collections in the messaging service, that group events logically.\nTHe clients indicate which message goes to which topic.In order to consume events\nfrom a topic an assigned subscription to the desired topic is required.\nA topic can habe multiple subscriptions and the events will be replicated across\nall the attached subscriptions, meaning that no race data conditions may ever happen."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'\n    while True:\n        try:\n            # consume alerts\n            consumed_messages = ams.pull_sub(sub="test-sub", return_immediately=True, verify=True)\n            \n            if len(consumed_messages) == 0:\n                continue\n            \n            payload = consumed_messages[0][1].get_data()\n            ack_id = consumed_messages[0][0]\n\n            # if we can\'t parse the message body we should ack the message and move to the next\n            try:\n                payload = json.loads(payload)\n                LOGGER.info("Examining new message {0} . . .".format(ack_id))\n                \n                # here we can implement any filtering functionality\n                # after we ave successfully parsed the message payload\n                if !has_desired_payload(payload):\n                    continue\n                \n            except Exception as e:\n            \n                # in case we cannot parse the payload, we should ACK the message\n                # in order for the consumtion mechanism to bring us the next one\n                LOGGER.error("Cannot parse payload for message {0}.{1}.Skipping . . .".format(ack_id, str(e)))\n                try:\n                    ams.ack_sub(sub=args.sub, ids=[ack_id], verify=True)\n                    continue\n                except AmsException as e:\n                    LOGGER.error("Could not skip message {0}.{1}".format(ack_id, str(e)))\n                    continue\n\n'})}),"\n",(0,s.jsx)(n.h3,{id:"publishing-events-to-a-topic",children:"Publishing Events to a Topic"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'            \n            # after we filtered messages with the appropriate payload\n            # we can reformat our message and send it to another topic\n            # for example to archive some specific info about the event\n            formatted_message = format_message(payload)\n            try:\n                ams.publish(topic="test-topic", msg=[AmsMessage(data=formatted_message)], verify=True)\n            except AmsException as e:\n                LOGGER.error("Could not publish to topic.{0}".format(str(e)))\n                continue\n\n            # ack the original event in order for the consumption\n            # mechanism to bring the next event\n            try:\n                ams.ack_sub(sub=args.sub, ids=[ack_id], verify=true)\n            except AmsException as e:\n                LOGGER.error("Could not ack original event {0}.{1}".format(ack_id, str(e)))\n        except AmsException as e:\n            LOGGER.error("Cannot pull from subscription.{0}".format(str(e)))\n\n'})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var s=t(6540);const o={},i=s.createContext(o);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);